---
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';
import DitherField from '../components/DitherField.astro';
import PanelStud from '../components/PanelStud.astro';
import RosterGrid from '../components/RosterGrid.astro';
import ToolbarPixel from '../components/ToolbarPixel.astro';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Format posts for RosterGrid
const rosterItems = posts.slice(0, 10).map(post => ({
	title: post.data.title,
	date: new Date(post.data.pubDate).toLocaleDateString('ko-KR', { 
		year: '2-digit', 
		month: '2-digit', 
		day: '2-digit' 
	}).replace(/\. /g, '-').replace('.', ''),
	tags: post.data.tags || [],
	reads: Math.floor(Math.random() * 10000) + 1000, // Random reads for demo
	href: `/${post.id}/`
}));

// Toolbar items
const toolbarItems = [
	{ icon: 'H', label: 'Home', href: '/' },
	{ icon: 'B', label: 'Blog', href: '/blog-list' },
	{ icon: 'A', label: 'About', href: '/about' },
	{ icon: 'R', label: 'RSS', href: '/rss.xml' },
	{ icon: 'T', label: 'Tag', action: 'tag' },
	{ icon: 'S', label: 'Sort', action: 'sort' },
	{ icon: 'V', label: 'View', action: 'view' },
];

// Categories
const categories = [
	{ name: 'All', count: posts.length, active: true },
	{ name: 'Guides', count: 12 },
	{ name: 'DevLog', count: 8 },
	{ name: 'Systems', count: 15 },
	{ name: 'Retro', count: 5 },
];

// Tags
const allTags = ['Astro', 'UI', 'PC-98', 'KSK', 'JejuPass'];
---

<!doctype html>
<html lang="ko">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<link rel="stylesheet" href="/src/styles/pixel-theme.css" />
		<style>
			body {
				font-family: var(--pixel-font);
				background-color: var(--fq4-bg-main);
				background-image: 
					repeating-linear-gradient(
						0deg,
						transparent,
						transparent 1px,
						var(--fq4-bg-dark) 1px,
						var(--fq4-bg-dark) 2px
					),
					repeating-linear-gradient(
						90deg,
						transparent,
						transparent 1px,
						var(--fq4-bg-dark) 1px,
						var(--fq4-bg-dark) 2px
					);
				background-size: 2px 2px;
				color: var(--fq4-text-primary);
				margin: 0;
				padding: 0;
			}

			.main-container {
				display: flex;
				max-width: 1200px;
				margin: 0 auto;
				padding: 16px;
				gap: 16px;
			}

			.sidebar {
				flex: 0 0 200px;
			}

			.content-area {
				flex: 1;
			}

			.search-bar {
				display: flex;
				gap: 4px;
				margin-bottom: 16px;
			}

			.search-input {
				flex: 1;
				font-family: var(--pixel-font);
				background-color: var(--fq4-bg-light);
				border: var(--pixel-border-width) solid var(--fq4-panel-border);
				color: var(--fq4-text-primary);
				padding: 6px 8px;
				font-size: 14px;
				box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.2);
			}

			.search-input:focus {
				outline: none;
				border-color: var(--fq4-accent);
				background-color: white;
			}

			.control-buttons {
				display: flex;
				gap: 4px;
				margin-bottom: 16px;
				justify-content: flex-end;
			}

			.control-button {
				font-family: var(--pixel-font);
				background-color: var(--fq4-panel-bg);
				border: var(--pixel-border-width) solid var(--fq4-panel-border);
				color: var(--fq4-text-primary);
				padding: 4px 12px;
				font-size: 12px;
				cursor: pointer;
				text-transform: uppercase;
				letter-spacing: 1px;
			}

			.control-button:hover {
				background-color: var(--fq4-selection);
			}

			.category-list {
				list-style: none;
				margin: 0;
				padding: 0;
			}

			.category-item {
				display: flex;
				justify-content: space-between;
				padding: 6px 8px;
				margin: 2px 0;
				color: var(--fq4-text-primary);
				text-decoration: none;
				border-left: 2px solid transparent;
				font-size: 14px;
				cursor: pointer;
			}

			.category-item:hover {
				background-color: var(--fq4-selection);
				border-left-color: var(--fq4-accent);
			}

			.category-item.active {
				background-color: var(--fq4-highlight);
				border-left-color: var(--fq4-text-primary);
				font-weight: bold;
			}

			.category-count {
				color: var(--fq4-text-secondary);
			}

			.tag-list {
				display: flex;
				flex-wrap: wrap;
				gap: 4px;
				margin: 0;
				padding: 0;
				list-style: none;
			}

			.tag-item {
				background-color: var(--fq4-bg-light);
				border: var(--pixel-border-width) solid var(--fq4-panel-border);
				padding: 2px 8px;
				font-size: 12px;
				cursor: pointer;
				color: var(--fq4-text-primary);
				text-decoration: none;
			}

			.tag-item:hover {
				background-color: var(--fq4-selection);
			}

			.view-all-link {
				display: block;
				text-align: center;
				margin-top: 16px;
				padding: 8px;
				background-color: var(--fq4-panel-bg);
				border: var(--pixel-border-width) solid var(--fq4-panel-border);
				color: var(--fq4-text-primary);
				text-decoration: none;
				font-family: var(--pixel-font);
				font-size: 14px;
				cursor: pointer;
			}

			.view-all-link:hover {
				background-color: var(--fq4-selection);
			}

			.header-area {
				margin-bottom: 16px;
			}

			.main-field {
				min-height: 500px;
				position: relative;
			}

			/* Override header styles */
			header {
				display: none;
			}

			footer {
				display: none;
			}
		</style>
	</head>
	<body class="pixel-theme">
		<div class="main-container">
			<aside class="sidebar">
				<PanelStud title="CATEGORIES">
					<ul class="category-list">
						{categories.map(cat => (
							<li class={`category-item ${cat.active ? 'active' : ''}`}>
								<span>{cat.name}</span>
								<span class="category-count">{cat.count}</span>
							</li>
						))}
					</ul>
				</PanelStud>

				<PanelStud title="TAGS">
					<ul class="tag-list">
						{allTags.map(tag => (
							<li>
								<a href={`/tags/${tag.toLowerCase()}`} class="tag-item">
									{tag}
								</a>
							</li>
						))}
					</ul>
				</PanelStud>
			</aside>

			<div class="content-area">
				<div class="header-area">
					<ToolbarPixel items={toolbarItems} />
				</div>

				<div class="search-bar">
					<input 
						type="text" 
						placeholder="SEARCH..." 
						class="search-input"
					/>
				</div>

				<div class="control-buttons">
					<button class="control-button">TAG</button>
					<button class="control-button">SORT</button>
					<button class="control-button">VIEW</button>
				</div>

				<DitherField withGrid={true} class="main-field">
					<PanelStud title={`${SITE_TITLE} - RECENT POSTS`}>
						<RosterGrid items={rosterItems} />
						<a href="/blog-list" class="view-all-link">
							VIEW ALL POSTS â†’
						</a>
					</PanelStud>
				</DitherField>
			</div>
		</div>
	</body>
</html>