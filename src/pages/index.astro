---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Get recent posts for battlefield
const recentPosts = posts.slice(0, 20);

// Character icons array
const characterIcons = ['‚öîÔ∏è', 'üõ°Ô∏è', 'üèπ', 'üó°Ô∏è', 'üîÆ', 'üíé', 'üéØ', '‚ö°', 'üî•', '‚ùÑÔ∏è', 'üåü', 'üí´', '‚ú®', 'üî®', 'ü™ì', 'üè∫', 'üìú', 'üß™', 'üíä', 'üçÑ'];

// Generate random positions for units on the battlefield
function getRandomPosition(index: number) {
	const row = Math.floor(index / 4);
	const col = index % 4;
	const x = 15 + col * 22 + Math.random() * 10;
	const y = 10 + row * 15 + Math.random() * 8;
	return { x, y };
}
---

<!doctype html>
<html lang="ko">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			body {
				margin: 0;
				padding: 0;
				overflow-x: hidden;
			}

			/* Battle Field Container */
			.battle-container {
				background: #2A3939;
				min-height: 100vh;
				display: flex;
				flex-direction: column;
			}
			
			/* Top Menu Bar */
			.menu-bar {
				background: var(--rpg-window-bg);
				border-bottom: 2px solid var(--rpg-border-outer);
				padding: 4px 8px;
				display: flex;
				gap: 4px;
				box-shadow: 
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
				align-items: center;
			}
			
			.menu-item {
				padding: 4px 12px;
				background: var(--rpg-window-mid);
				border: 1px solid var(--rpg-border-outer);
				color: var(--rpg-text-normal);
				font-size: 12px;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				cursor: pointer;
				box-shadow: 
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
			}
			
			.menu-item:hover {
				background: var(--rpg-window-light);
				color: var(--rpg-gold);
			}

			.menu-item.active {
				background: var(--rpg-window-dark);
				color: var(--rpg-gold);
				box-shadow: 
					inset 1px 1px 0 var(--rpg-window-dark),
					inset -1px -1px 0 var(--rpg-window-light);
			}

			.menu-spacer {
				flex: 1;
			}

			.turn-indicator {
				color: var(--rpg-stat-orange);
				font-size: 12px;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				margin-right: 8px;
			}
			
			/* Battle Field */
			.battle-field {
				background: #4A7C4A;
				background-image: 
					repeating-linear-gradient(
						0deg,
						rgba(0, 0, 0, 0.1),
						rgba(0, 0, 0, 0.1) 1px,
						transparent 1px,
						transparent 32px
					),
					repeating-linear-gradient(
						90deg,
						rgba(0, 0, 0, 0.1),
						rgba(0, 0, 0, 0.1) 1px,
						transparent 1px,
						transparent 32px
					);
				border: 3px solid var(--rpg-border-outer);
				box-shadow: 
					inset -2px -2px 0 rgba(0, 0, 0, 0.3),
					inset 2px 2px 0 rgba(255, 255, 255, 0.1);
				min-height: 450px;
				position: relative;
				flex: 1;
				margin: 8px;
			}
			
			/* Character Sprites (Blog Posts) */
			.battle-units {
				position: absolute;
				top: 0;
				left: 0;
				right: 0;
				bottom: 0;
				padding: 20px;
			}
			
			.unit {
				position: absolute;
				width: 48px;
				height: 48px;
				cursor: pointer;
				transition: all 0.2s ease;
				z-index: 1;
				text-decoration: none;
			}
			
			.unit:hover {
				transform: translateY(-4px);
				z-index: 10;
			}
			
			.unit-sprite {
				width: 100%;
				height: 100%;
				background: var(--rpg-window-bg);
				border: 2px solid var(--rpg-border-outer);
				box-shadow: 
					0 2px 4px rgba(0, 0, 0, 0.4),
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 20px;
				position: relative;
			}
			
			.unit:hover .unit-sprite {
				box-shadow: 
					0 4px 8px rgba(0, 0, 0, 0.6),
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light),
					0 0 16px rgba(255, 215, 0, 0.3);
			}
			
			/* Shadow under unit */
			.unit-shadow {
				position: absolute;
				bottom: -6px;
				left: 50%;
				transform: translateX(-50%);
				width: 32px;
				height: 8px;
				background: rgba(0, 0, 0, 0.3);
				border-radius: 50%;
				z-index: -1;
			}
			
			.unit.ally .unit-sprite {
				background: #4A6B6B;
				border-color: var(--rpg-stat-blue);
			}
			
			.unit.enemy .unit-sprite {
				background: #6B4A4A;
				border-color: var(--rpg-stat-orange);
			}

			.unit.boss .unit-sprite {
				background: #4A3A5A;
				border-color: var(--rpg-gold);
				width: 64px;
				height: 64px;
				font-size: 28px;
			}
			
			.unit-level {
				position: absolute;
				top: -8px;
				right: -4px;
				background: var(--rpg-header-bg);
				color: var(--rpg-stat-orange);
				font-size: 9px;
				padding: 1px 3px;
				border: 1px solid var(--rpg-border-outer);
				font-family: 'Galmuri7', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
				z-index: 2;
			}
			
			.unit-info {
				position: absolute;
				bottom: -30px;
				left: 50%;
				transform: translateX(-50%);
				background: rgba(0, 0, 0, 0.9);
				color: white;
				padding: 3px 8px;
				font-size: 10px;
				white-space: nowrap;
				border: 1px solid var(--rpg-gold);
				display: none;
				font-family: 'Galmuri9', 'NeoDunggeunmo', monospace;
				z-index: 100;
				max-width: 200px;
				overflow: hidden;
				text-overflow: ellipsis;
			}
			
			.unit:hover .unit-info {
				display: block;
			}
			
			/* Party Status Panel */
			.party-status {
				background: var(--rpg-window-bg);
				border: 3px solid var(--rpg-border-outer);
				box-shadow: 
					inset -2px -2px 0 var(--rpg-window-dark),
					inset 2px 2px 0 var(--rpg-window-light);
				margin: 8px;
				padding: 8px;
			}
			
			.status-header {
				background: var(--rpg-header-bg);
				border: 1px solid var(--rpg-border-outer);
				padding: 4px 8px;
				margin-bottom: 8px;
				color: var(--rpg-text-normal);
				font-size: 12px;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				display: flex;
				justify-content: space-between;
				align-items: center;
			}
			
			.party-grid {
				display: grid;
				grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
				gap: 4px;
				max-height: 180px;
				overflow-y: auto;
			}
			
			.party-member {
				background: var(--rpg-window-dark);
				border: 1px solid var(--rpg-border-outer);
				padding: 6px;
				display: flex;
				align-items: center;
				gap: 8px;
				cursor: pointer;
				transition: all 0.1s ease;
				text-decoration: none;
			}
			
			.party-member:hover {
				background: var(--rpg-window-mid);
				border-color: var(--rpg-gold);
			}
			
			.member-icon {
				width: 32px;
				height: 32px;
				background: var(--rpg-window-bg);
				border: 1px solid var(--rpg-border-outer);
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 16px;
				flex-shrink: 0;
			}
			
			.member-info {
				flex: 1;
				min-width: 0;
			}
			
			.member-name {
				font-size: 11px;
				color: var(--rpg-text-normal);
				font-family: 'Galmuri9', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
				margin-bottom: 3px;
				line-height: 1.2;
			}
			
			.member-stats {
				display: flex;
				gap: 12px;
				font-size: 10px;
				font-family: 'Galmuri9', 'NeoDunggeunmo', monospace;
			}
			
			.stat {
				color: var(--rpg-stat-orange);
				text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
			}
			
			.stat.date {
				color: var(--rpg-stat-green);
			}
			
			/* View All Button */
			.view-all-container {
				text-align: center;
				padding: 8px;
			}
			
			.view-all-btn {
				display: inline-block;
				padding: 6px 16px;
				background: var(--rpg-window-mid);
				color: var(--rpg-text-normal);
				text-decoration: none;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				font-size: 12px;
				text-transform: uppercase;
				border: 1px solid var(--rpg-border-outer);
				box-shadow: 
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
				transition: all 0.1s ease;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
			}

			.view-all-btn:hover {
				background: var(--rpg-window-light);
				color: var(--rpg-gold);
			}

			@media (max-width: 768px) {
				.battle-field {
					min-height: 350px;
				}
				
				.party-grid {
					grid-template-columns: 1fr;
				}
				
				.unit {
					width: 36px;
					height: 36px;
				}
				
				.unit-sprite {
					font-size: 16px;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<div class="battle-container">
			<!-- Menu Bar -->
			<div class="menu-bar">
				<span class="menu-item active">Ï†ÑÌà¨</span>
				<span class="menu-item">ÏïÑÏù¥ÌÖú</span>
				<span class="menu-item">ÎßàÎ≤ï</span>
				<span class="menu-item">Ïû•ÎπÑ</span>
				<span class="menu-item">ÏÉÅÌÉú</span>
				<span class="menu-item">ÎèÑÎßù</span>
				<span class="menu-spacer"></span>
				<span class="turn-indicator">TURN: {posts.length}</span>
			</div>

			<!-- Battle Field -->
			<div class="battle-field">
				<div class="battle-units">
					{recentPosts.map((post, index) => {
						const pos = getRandomPosition(index);
						const icon = characterIcons[index % characterIcons.length];
						const level = 99 - index;
						const unitClass = index === 0 ? 'boss' : index < 8 ? 'ally' : 'enemy';
						
						return (
							<a 
								href={`/${post.id}/`}
								class={`unit ${unitClass}`}
								style={`left: ${pos.x}%; top: ${pos.y}%;`}
							>
								<div class="unit-sprite">
									{icon}
									<span class="unit-level">LV.{level}</span>
									<div class="unit-shadow"></div>
								</div>
								<div class="unit-info">{post.data.title}</div>
							</a>
						);
					})}
				</div>
			</div>

			<!-- Party Status Panel -->
			<div class="party-status">
				<div class="status-header">
					<span>PARTY STATUS</span>
					<span>TOTAL: {posts.length} POSTS</span>
				</div>
				<div class="party-grid">
					{posts.slice(0, 12).map((post, index) => (
						<a href={`/${post.id}/`} class="party-member">
							<div class="member-icon">
								{characterIcons[index % characterIcons.length]}
							</div>
							<div class="member-info">
								<div class="member-name">{post.data.title}</div>
								<div class="member-stats">
									<span class="stat">LV.{99 - index}</span>
									<span class="stat date">
										<FormattedDate date={post.data.pubDate} />
									</span>
								</div>
							</div>
						</a>
					))}
				</div>
				<div class="view-all-container">
					<a href="/blog-list" class="view-all-btn">
						Ï†ÑÏ≤¥ Ìè¨Ïä§Ìä∏ Î≥¥Í∏∞ ‚Üí
					</a>
				</div>
			</div>
		</div>
		<Footer />
	</body>
</html>