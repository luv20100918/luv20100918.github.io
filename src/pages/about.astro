---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import Header from '../components/Header.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from '../consts';

// NPC characters data
const npcs = [
	{ id: 'king', name: '왕', icon: '👑', title: '버드스프링 왕국의 지배자' },
	{ id: 'knight', name: '기사단장', icon: '⚔️', title: '18년차 전설의 검사' },
	{ id: 'wizard', name: '대마법사', icon: '🧙', title: 'AI 마법의 대가' },
	{ id: 'merchant', name: '상인', icon: '💰', title: '기술 스택 수집가' },
	{ id: 'bard', name: '음유시인', icon: '🎵', title: '이야기 전달자' },
	{ id: 'scholar', name: '학자', icon: '📚', title: 'INTJ 현자' },
];

const currentNPC = 'king';
---

<!doctype html>
<html lang="ko">
	<head>
		<BaseHead title={`${SITE_TITLE} - Royal Palace`} description={SITE_DESCRIPTION} />
		<style>
			body {
				margin: 0;
				padding: 0;
				background: #2A3939;
				overflow-x: hidden;
			}

			.palace-container {
				max-width: 1200px;
				margin: 0 auto;
				padding: 8px;
				min-height: calc(100vh - 200px);
			}

			/* Palace Scene */
			.palace-scene {
				background: linear-gradient(to bottom, #4A3A5A 0%, #6B4A6B 50%, #8A5A7A 100%);
				border: 3px solid var(--rpg-border-outer);
				box-shadow: 
					inset -2px -2px 0 var(--rpg-window-dark),
					inset 2px 2px 0 var(--rpg-window-light),
					0 0 0 1px var(--rpg-border-inner);
				position: relative;
				height: 400px;
				overflow: hidden;
			}

			/* Throne Room Background */
			.throne-room {
				position: absolute;
				width: 100%;
				height: 100%;
				background-image: 
					repeating-linear-gradient(
						90deg,
						transparent,
						transparent 50px,
						rgba(255, 215, 0, 0.05) 50px,
						rgba(255, 215, 0, 0.05) 52px
					),
					repeating-linear-gradient(
						0deg,
						transparent,
						transparent 50px,
						rgba(255, 215, 0, 0.05) 50px,
						rgba(255, 215, 0, 0.05) 52px
					);
			}

			/* Decorative Elements */
			.palace-decoration {
				position: absolute;
				top: 20px;
				left: 50%;
				transform: translateX(-50%);
				font-size: 48px;
				filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));
			}

			.throne {
				position: absolute;
				top: 60px;
				left: 50%;
				transform: translateX(-50%);
				font-size: 64px;
				animation: float 3s ease-in-out infinite;
			}

			@keyframes float {
				0%, 100% { transform: translateX(-50%) translateY(0); }
				50% { transform: translateX(-50%) translateY(-10px); }
			}

			/* NPCs Display */
			.npcs-container {
				position: absolute;
				bottom: 80px;
				width: 100%;
				display: flex;
				justify-content: center;
				gap: 40px;
				padding: 0 20px;
			}

			.npc {
				text-align: center;
				cursor: pointer;
				transition: all 0.2s ease;
			}

			.npc:hover {
				transform: translateY(-8px);
			}

			.npc-sprite {
				font-size: 48px;
				display: block;
				filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.5));
			}

			.npc-name {
				background: var(--rpg-header-bg);
				color: var(--rpg-text-normal);
				padding: 2px 8px;
				border: 1px solid var(--rpg-border-outer);
				font-size: 10px;
				font-family: 'Galmuri9', 'NeoDunggeunmo', monospace;
				margin-top: 4px;
				display: inline-block;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
			}

			.npc.active .npc-name {
				background: var(--rpg-gold);
				color: var(--rpg-header-bg);
			}

			/* Dialog Box */
			.dialog-container {
				margin-top: 8px;
			}

			.dialog-box {
				background: var(--rpg-window-bg);
				border: 3px solid var(--rpg-border-outer);
				box-shadow: 
					inset -2px -2px 0 var(--rpg-window-dark),
					inset 2px 2px 0 var(--rpg-window-light),
					0 0 0 1px var(--rpg-border-inner);
				padding: 16px;
				position: relative;
				min-height: 200px;
			}

			.speaker-label {
				position: absolute;
				top: -12px;
				left: 20px;
				background: var(--rpg-header-bg);
				padding: 4px 12px;
				border: 2px solid var(--rpg-border-outer);
				color: var(--rpg-gold);
				font-family: 'Galmuri14', 'NeoDunggeunmo', monospace;
				font-size: 14px;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				display: flex;
				align-items: center;
				gap: 6px;
			}

			.dialog-content {
				color: var(--rpg-text-normal);
				font-family: 'Galmuri14', 'NeoDunggeunmo', monospace;
				font-size: 14px;
				line-height: 1.8;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				padding-top: 8px;
			}

			.dialog-content h3 {
				color: var(--rpg-gold);
				font-size: 16px;
				margin: 16px 0 8px 0;
				text-shadow: 2px 2px 0 var(--rpg-text-shadow);
			}

			.dialog-content p {
				margin-bottom: 12px;
			}

			.dialog-content ul {
				list-style: none;
				padding-left: 0;
			}

			.dialog-content li {
				padding: 4px 0;
				padding-left: 20px;
				position: relative;
			}

			.dialog-content li::before {
				content: '▶';
				position: absolute;
				left: 0;
				color: var(--rpg-stat-orange);
			}

			/* Choice Buttons */
			.choices-container {
				margin-top: 16px;
				padding-top: 16px;
				border-top: 1px solid var(--rpg-border-outer);
				display: flex;
				flex-wrap: wrap;
				gap: 8px;
			}

			.choice-btn {
				background: var(--rpg-window-dark);
				border: 1px solid var(--rpg-border-outer);
				padding: 6px 12px;
				color: var(--rpg-text-normal);
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				font-size: 12px;
				cursor: pointer;
				transition: all 0.1s ease;
				text-shadow: 1px 1px 0 var(--rpg-text-shadow);
				box-shadow: 
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
			}

			.choice-btn:hover {
				background: var(--rpg-window-mid);
				color: var(--rpg-gold);
				transform: translateY(-2px);
			}

			.choice-btn::before {
				content: '◆ ';
				color: var(--rpg-gold);
			}

			/* Stats Panel */
			.stats-panel {
				background: var(--rpg-window-bg);
				border: 2px solid var(--rpg-border-outer);
				padding: 12px;
				margin-top: 8px;
				box-shadow: 
					inset -1px -1px 0 var(--rpg-window-dark),
					inset 1px 1px 0 var(--rpg-window-light);
			}

			.stats-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
				gap: 8px;
			}

			.stat-item {
				background: var(--rpg-window-dark);
				border: 1px solid var(--rpg-border-outer);
				padding: 6px;
				display: flex;
				justify-content: space-between;
				align-items: center;
			}

			.stat-label {
				color: var(--rpg-text-normal);
				font-size: 11px;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
			}

			.stat-value {
				color: var(--rpg-stat-orange);
				font-size: 12px;
				font-family: 'Galmuri11', 'NeoDunggeunmo', monospace;
				text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
			}

			/* Mobile Responsive */
			@media (max-width: 768px) {
				.palace-scene {
					height: 300px;
				}

				.npcs-container {
					gap: 20px;
					bottom: 60px;
				}

				.npc-sprite {
					font-size: 36px;
				}

				.dialog-content {
					font-size: 12px;
				}
			}

			/* Message indicator */
			.message-indicator {
				position: absolute;
				bottom: 8px;
				right: 12px;
				color: var(--rpg-gold);
				font-size: 12px;
				animation: blink 1s infinite;
			}

			@keyframes blink {
				0%, 50% { opacity: 1; }
				51%, 100% { opacity: 0; }
			}
		</style>
	</head>
	<body>
		<Header />
		<div class="palace-container">
			<div class="palace-scene">
				<div class="throne-room">
					<div class="palace-decoration">⚜️ ⚜️ ⚜️</div>
					<div class="throne">👑</div>
					<div class="npcs-container">
						{npcs.map((npc) => (
							<div class={`npc ${npc.id === currentNPC ? 'active' : ''}`} data-npc={npc.id}>
								<span class="npc-sprite">{npc.icon}</span>
								<span class="npc-name">{npc.name}</span>
							</div>
						))}
					</div>
				</div>
			</div>

			<div class="dialog-container">
				<div class="dialog-box">
					<div class="speaker-label">
						<span>👑</span>
						<span>버드스프링 왕국의 왕</span>
					</div>
					<div class="dialog-content">
						<p>
							"어서오게, 용감한 방문자여! 나는 이 버드스프링 왕국을 다스리는 자일세.
							자네가 이곳까지 찾아온 것은 분명 특별한 이유가 있을 것이야."
						</p>

						<h3>왕국의 역사</h3>
						<p>
							"이 왕국은 18년 전, 한 젊은 개발자가 첫 'Hello World'를 외치며 시작되었다네.
							그 이후로 수많은 프로젝트들이 이곳을 거쳐갔고, 각각은 왕국의 소중한 보물이 되었지."
						</p>

						<h3>왕실 구성원</h3>
						<ul>
							<li><strong>왕</strong>: INTJ 성향의 개발자, 두 왕자의 아버지</li>
							<li><strong>기사단장</strong>: Spring Boot, Node.js로 무장한 백엔드 전사</li>
							<li><strong>대마법사</strong>: Claude Code와 AI 마법을 다루는 현자</li>
							<li><strong>상인</strong>: Docker, Kubernetes, AWS 등 귀중한 기술을 거래</li>
							<li><strong>음유시인</strong>: 기술 블로그를 통해 지식을 전파하는 이야기꾼</li>
							<li><strong>학자</strong>: 끊임없이 새로운 기술을 연구하는 탐구자</li>
						</ul>

						<h3>왕국의 보물</h3>
						<p>
							"우리 왕국에는 Vue.js의 반응형 갑옷, TypeScript의 타입 안전 방패,
							PostgreSQL의 데이터 성배 등 수많은 보물들이 있다네. 
							그리고 최근에는 AI라는 강력한 마법의 힘을 손에 넣었지."
						</p>

						<h3>왕의 철학</h3>
						<p>
							<em>"완벽한 코드는 없지만, 더 나은 코드는 항상 존재한다"</em><br/>
							"이것이 우리 왕국의 모토일세. 끊임없이 개선하고, 학습하며, 성장하는 것.
							그것이 진정한 개발자의 길이라고 믿고 있다네."
						</p>
					</div>
					<div class="choices-container">
						<button class="choice-btn">왕국의 역사 더 듣기</button>
						<button class="choice-btn">기사단장과 대화하기</button>
						<button class="choice-btn">대마법사를 만나기</button>
						<button class="choice-btn">상인과 거래하기</button>
						<button class="choice-btn">작별 인사</button>
					</div>
					<span class="message-indicator">▼</span>
				</div>
			</div>

			<div class="stats-panel">
				<div class="stats-grid">
					<div class="stat-item">
						<span class="stat-label">경험치</span>
						<span class="stat-value">18년</span>
					</div>
					<div class="stat-item">
						<span class="stat-label">직업</span>
						<span class="stat-value">풀스택 개발자</span>
					</div>
					<div class="stat-item">
						<span class="stat-label">성향</span>
						<span class="stat-value">INTJ</span>
					</div>
					<div class="stat-item">
						<span class="stat-label">주무기</span>
						<span class="stat-value">Claude Code</span>
					</div>
					<div class="stat-item">
						<span class="stat-label">길드</span>
						<span class="stat-value">BirdSpring</span>
					</div>
					<div class="stat-item">
						<span class="stat-label">연락처</span>
						<span class="stat-value">@luv20100918</span>
					</div>
				</div>
			</div>
		</div>
		<Footer />

		<script>
			// NPC interaction
			document.querySelectorAll('.npc').forEach(npc => {
				npc.addEventListener('click', function() {
					const npcId = this.dataset.npc;
					console.log('Talking to:', npcId);
					// Here you could add dialog changes based on NPC
				});
			});

			// Choice buttons interaction
			document.querySelectorAll('.choice-btn').forEach(btn => {
				btn.addEventListener('click', function() {
					console.log('Selected:', this.textContent);
					// Here you could add dialog progression
				});
			});
		</script>
	</body>
</html>