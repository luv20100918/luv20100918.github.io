---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import type { ImageMetadata } from 'astro';
import FallbackImage from '../assets/blog-placeholder-1.jpg';
import { SITE_TITLE } from '../consts';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	pubDate?: Date;
	author?: string;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description, 
	image = FallbackImage,
	pubDate,
	author = 'luv20100918'
} = Astro.props;
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="author" content={author} />
{pubDate && <meta property="article:published_time" content={pubDate.toISOString()} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={pubDate ? "article" : "website"} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:locale" content="ko_KR" />
<meta property="og:site_name" content={SITE_TITLE} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={new URL(image.src, Astro.url)} />
<meta property="twitter:creator" content="@luv20100918" />

<!-- Naver Site Verification -->
<meta name="naver-site-verification" content="4cdd016cf97c8d068d0894f7639159205b7c258e" />

<!-- Google Analytics -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-9C9M1EJBCG" is:inline></script>
<script is:inline>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());
  gtag('config', 'UA-191699515-2');
  gtag('config', 'G-9C9M1EJBCG');
</script>

<!-- Google AdSense -->
<script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-5768884488453878" crossorigin="anonymous" is:inline></script>

<!-- Pixel & Korean Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Press+Start+2P&family=DotGothic16&family=Silkscreen:wght@400;700&family=VT323&family=Pixelify+Sans:wght@400;500;600;700&display=swap" rel="stylesheet">
<link href="https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_six@1.2/DungGeunMo.woff" rel="stylesheet" type="text/css">
<link href="https://fastly.jsdelivr.net/gh/neodgm/neodgm-webfont@latest/neodgm.css" rel="stylesheet">
<link href="https://fastly.jsdelivr.net/gh/neodgm/neodgm-webfont@latest/neodgm_code.css" rel="stylesheet">


<!-- Enhanced Pixel Theme Styles -->
<style>
  /* Apply pixelated rendering globally */
  * {
    image-rendering: pixelated;
    image-rendering: -moz-crisp-edges;
    image-rendering: crisp-edges;
  }

  /* Enhanced body with stronger dot pattern */
  body {
    font-family: "NeoDunggeunmo", "DungGeunMo", "DotGothic16", monospace !important;
    -webkit-font-smoothing: none;
    -moz-osx-font-smoothing: grayscale;
    font-size: 16px;
    line-height: 1.6;
  }

  /* Pixel-perfect headings with classic RPG style */
  h1 {
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace !important;
    font-weight: normal;
    letter-spacing: 0;
    line-height: 1.5 !important;
    font-size: 28px !important;
  }
  
  h2 {
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace !important;
    font-weight: normal;
    letter-spacing: 0;
    line-height: 1.5 !important;
    font-size: 24px !important;
  }
  
  h3, h4 {
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace !important;
    letter-spacing: 0;
    line-height: 1.5 !important;
    font-size: 20px !important;
  }
  
  h5, h6 {
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace !important;
    letter-spacing: 0;
    line-height: 1.5 !important;
    font-size: 18px !important;
  }

  h1::before {
    animation: blink 1s infinite;
  }

  @keyframes blink {
    0%, 50% { opacity: 1; }
    51%, 100% { opacity: 0.3; }
  }

  /* Enhanced code blocks with CRT effect */
  pre {
    font-family: "NeoDunggeunmo Code", "NeoDunggeunmo", monospace !important;
  }
  
  pre::before {
    content: '코드';
    position: absolute;
    top: -2px;
    left: 12px;
    background: var(--fq4-border);
    color: white;
    padding: 2px 8px;
    font-size: 12px;
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace;
    letter-spacing: 0;
  }

  /* Animated list markers */
  ul li::before {
    content: "◆";
    position: absolute;
    left: -1.5em;
    color: var(--fq4-accent);
    font-size: 12px;
    animation: pulse 1.5s infinite;
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; transform: scale(1); }
    50% { opacity: 0.7; transform: scale(0.9); }
  }

  /* Pixelated images */
  img {
    image-rendering: pixelated !important;
    transition: transform 0.2s ease;
  }

  img:hover {
    transform: translate(-2px, -2px);
  }

  /* Selection with pixel style */
  ::selection {
    background: var(--fq4-cyan);
    color: var(--fq4-text);
    text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.3);
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 16px;
    height: 16px;
  }

  ::-webkit-scrollbar-track {
    background: var(--fq4-window);
    border: 2px solid var(--fq4-border);
  }

  ::-webkit-scrollbar-thumb {
    background: var(--fq4-highlight);
    border: 2px solid var(--fq4-border);
    box-shadow: 
      inset -2px -2px 0 rgba(0, 0, 0, 0.2),
      inset 2px 2px 0 rgba(255, 255, 255, 0.3);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: var(--fq4-accent);
  }

  /* Glow effect for h1 */
  @keyframes glow {
    from {
      text-shadow: 
        2px 2px 0 rgba(255, 255, 255, 0.5),
        3px 3px 0 rgba(0, 0, 0, 0.2),
        0 0 10px rgba(89, 89, 255, 0.3);
    }
    to {
      text-shadow: 
        2px 2px 0 rgba(255, 255, 255, 0.5),
        3px 3px 0 rgba(0, 0, 0, 0.2),
        0 0 20px rgba(89, 89, 255, 0.5);
    }
  }

  h1 {
    animation: glow 2s ease-in-out infinite alternate;
  }

  /* Pixel-perfect buttons */
  button, .button, input[type="submit"], input[type="button"], .view-all-btn {
    font-family: "NeoDunggeunmo", "DungGeunMo", monospace !important;
    font-size: 14px !important;
    letter-spacing: 0;
    transition: all 0.1s ease;
  }

  button:hover, .button:hover, .view-all-btn:hover {
    transform: translate(-2px, -2px);
  }

  button:active, .button:active {
    transform: translate(0, 0);
  }
  
  /* Pixel Art Icons & Emoticons */
  .pixel-icon {
    display: inline-block;
    width: 16px;
    height: 16px;
    position: relative;
    margin: 0 4px;
    vertical-align: middle;
  }

  /* 검 아이콘 */
  .pixel-icon.sword::before {
    content: '⚔';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 방패 아이콘 */
  .pixel-icon.shield::before {
    content: '🛡';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 하트 아이콘 */
  .pixel-icon.heart::before {
    content: '❤';
    color: red;
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 다이아몬드 아이콘 */
  .pixel-icon.gem::before {
    content: '💎';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 동전 아이콘 */
  .pixel-icon.coin::before {
    content: '🪙';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 별 아이콘 */
  .pixel-icon.star::before {
    content: '⭐';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 포션 아이콘 */
  .pixel-icon.potion::before {
    content: '🧪';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 책 아이콘 */
  .pixel-icon.book::before {
    content: '📖';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 열쇠 아이콘 */
  .pixel-icon.key::before {
    content: '🗝';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 몬스터 아이콘 */
  .pixel-icon.monster::before {
    content: '👾';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 슬라임 아이콘 */
  .pixel-icon.slime::before {
    content: '🟦';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.8;
  }

  /* 보물상자 아이콘 */
  .pixel-icon.chest::before {
    content: '📦';
    font-size: 14px;
    position: absolute;
    top: 0;
    left: 0;
  }

  /* 픽셀 배지 */
  .pixel-badge {
    display: inline-block;
    padding: 2px 6px;
    background: var(--fq4-accent);
    color: white;
    font-size: 10px;
    font-family: "NeoDunggeunmo", monospace;
    border: 1px solid var(--fq4-border);
    box-shadow: 1px 1px 0 rgba(0,0,0,0.3);
    margin-left: 4px;
  }

  .pixel-badge.new {
    background: #DC143C;
    animation: blink 1s infinite;
  }
</style>

<!-- KaTeX for Math -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" crossorigin="anonymous"/>
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.js" crossorigin="anonymous" is:inline></script>
<script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/contrib/auto-render.min.js" crossorigin="anonymous" onload="renderMathInElement(document.body);" is:inline></script>

<!-- Structured Data (JSON-LD) -->
{pubDate ? (
<script type="application/ld+json" is:inline set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": title,
  "description": description,
  "url": canonicalURL.href,
  "datePublished": pubDate.toISOString(),
  "author": {
    "@type": "Person",
    "name": author
  },
  "publisher": {
    "@type": "Organization",
    "name": SITE_TITLE,
    "logo": {
      "@type": "ImageObject",
      "url": `${Astro.site}favicon.svg`
    }
  },
  "image": new URL(image.src, Astro.url).href,
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalURL.href
  }
})} />
) : (
<script type="application/ld+json" is:inline set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "WebSite",
  "name": SITE_TITLE,
  "description": description,
  "url": Astro.site?.toString()
})} />
)}
